{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"PZCFJZaZsjW6","executionInfo":{"status":"ok","timestamp":1647874552149,"user_tz":0,"elapsed":92944,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":65},"outputId":"04a5984f-22ff-4f1a-cee6-f63d0e1ceeaa"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-490bbc3a-0677-4855-b215-0091e47ce672\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-490bbc3a-0677-4855-b215-0091e47ce672\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving irf1000.npy to irf1000.npy\n"]}],"source":["from google.colab import files\n","\n","fl = files.upload()\n","\n"]},{"cell_type":"code","execution_count":86,"metadata":{"id":"l3tpMHivs-GZ","executionInfo":{"status":"ok","timestamp":1647878173180,"user_tz":0,"elapsed":380,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["\n","import numpy as np\n","\n","irf = np.load(\"irf1000.npy\")\n","\n","\n","irf = irf[np.argmax(irf):]\n"]},{"cell_type":"code","execution_count":87,"metadata":{"id":"84-3c5b7mLPS","executionInfo":{"status":"ok","timestamp":1647878175168,"user_tz":0,"elapsed":303,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import scipy.stats as stats\n","import math\n","\n","density = len(irf)\n","\n","def generate_gaussian():\n","    \n","    x = np.array(range(density))\n","    y = irf\n","\n","    return (x,y)\n","\n","\n","\n","def f(x,a,tau):\n","    return a * np.exp(-x/tau)\n","\n","\n","def generate_decay_curve(low_a=0.1,high_a=1,low_tau=1,high_tau=50):\n","    a = np.random.uniform(low=low_a,high=high_a)\n","    tau = np.random.uniform(low=low_tau,high=high_tau)\n","    x = np.array(range(density))\n","    y = f(x,a,tau)\n","\n","    return (y,a,tau)\n","\n","def generate_decay_curve(low_a=0.1,high_a=1,low_tau=1,high_tau=50):\n","    a = np.random.uniform(low=low_a,high=high_a)\n","    tau = np.random.uniform(low=low_tau,high=high_tau)\n","    \n","    x = np.array(range(density))\n","    y = f(x,a,tau)\n","\n","    return (y,a,tau)\n","    \n","\n","def generate_dataset_one():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve()\n","    z = np.convolve(y,dec_y)[:density]\n","    # z += np.random.uniform(0,0.2)\n","    z = z + np.random.uniform(low=-z/5,high=z/5,size=density)\n","\n","\n","    t = t/100\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,0,0,0,0))\n","\n","    return (input,output)"]},{"cell_type":"code","execution_count":88,"metadata":{"id":"lPzB6AjSW1u9","executionInfo":{"status":"ok","timestamp":1647878177523,"user_tz":0,"elapsed":263,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["def generate_dataset_two():\n","    (x,y) = generate_gaussian()\n","    \n","\n","    (dec_y,a,t) = generate_decay_curve(low_tau=0.1,high_tau=10)\n","    (dec_y_2,a2,t2) = generate_decay_curve(low_tau=10.1,high_tau=100)\n","\n","    t = t/10\n","    t2 = t2/100\n","\n","    new_dec = dec_y + dec_y_2\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    # z += np.random.uniform(0,0.2)\n","    z = z + np.random.uniform(low=-z/5,high=z/5,size=density)\n","\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,a2,t2,0,0))\n","    output = np.array([t,t2,0])\n","    # output = output.reshape(3)\n","\n","    return (input,output)"]},{"cell_type":"code","execution_count":89,"metadata":{"id":"Q9y1bMKtXy22","executionInfo":{"status":"ok","timestamp":1647878179818,"user_tz":0,"elapsed":258,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["def generate_dataset_three():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve(low_tau=0.1,high_tau=5)\n","    (dec_y_2,a2,t2) = generate_decay_curve(low_tau=5,high_tau=15)\n","    (dec_y_3,a3,t3) = generate_decay_curve(low_tau=15,high_tau=100)\n","    \n","\n","    t = t/(5-0.1)\n","    t2 = t2/(15-5)\n","    t3 = t3/(100-15)\n","\n","\n","    new_dec = dec_y + dec_y_2 + dec_y_3\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    z = z + np.random.uniform(low=-z/6,high=z/6,size=density)\n","\n","    # z = np.log(z)\n","    # y = np.log(y)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array([t,t2,t3])\n","    # output = np.array([output[0][0],output[1][0],output[2][0],output[0][1],output[1][1],output[2][1]])\n","    # output = output.reshape(6)\n","\n","    return (input,output)"]},{"cell_type":"code","source":[""],"metadata":{"id":"VlaGlKyrJH5j","executionInfo":{"status":"ok","timestamp":1647877801890,"user_tz":0,"elapsed":241,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"execution_count":75,"outputs":[]},{"cell_type":"code","source":["\n","import matplotlib.pyplot as plt\n","\n","x = np.array(range(density))\n","\n","x_list, y_list = generate_dataset_three()\n","\n","# plt.plot(x,x_list[density:])\n","\n","\n","a = 0.5\n","tau = y_list[0]\n","a2 = 0.5\n","tau2 = y_list[1]\n","a3 = 0.5\n","tau3 = y_list[2]\n","\n","print(tau,tau2,tau3)\n","\n","plt.plot(x,x_list[:density])\n","plt.plot(x,np.convolve(f(x,a,tau*4.9)+ f(x,a2,tau2*10) + f(x,a3,tau3*85),irf)[:density])\n","\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"gFBnPK20_Whz","executionInfo":{"status":"ok","timestamp":1647880048377,"user_tz":0,"elapsed":367,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"b5e32df5-2b97-4636-826a-8780a6d8de62"},"execution_count":118,"outputs":[{"output_type":"stream","name":"stdout","text":["0.8831302807366846 1.1776956032948245 0.9243908396334528\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","execution_count":119,"metadata":{"id":"EbR3K0p8mUF8","executionInfo":{"status":"ok","timestamp":1647880128478,"user_tz":0,"elapsed":78507,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["\n","x_list = []\n","y_list = []\n","for i in range(100000):\n","\n","  \n","    # (x,y) = generate_dataset_one()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n","    (x,y) = generate_dataset_three()\n","\n","    \n","    \n","    x_list.append(x)\n","    y_list.append(y)\n","\n","    # (x,y) = generate_dataset_three()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n"]},{"cell_type":"code","execution_count":120,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":283,"status":"ok","timestamp":1647880134390,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"PCLMVIBvxt_B","outputId":"73b89b8b-0809-4ae3-eb6a-cb67b9bf5f97"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0.72671725 1.07630594 0.82266897]\n"]}],"source":["print(y_list[2])"]},{"cell_type":"code","execution_count":121,"metadata":{"id":"VTRWFQ8D4s1O","executionInfo":{"status":"ok","timestamp":1647880136900,"user_tz":0,"elapsed":2234,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","import sklearn\n","\n","x_list = np.array(x_list)\n","y_list = np.array(y_list)\n","\n","\n","# x_list = np.log(x_list)\n","\n","x_list, y_list = sklearn.utils.shuffle(x_list,y_list)"]},{"cell_type":"code","execution_count":54,"metadata":{"id":"hbgNkuaAm4RA","executionInfo":{"status":"ok","timestamp":1647877492761,"user_tz":0,"elapsed":2,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["\n","\n","\n","# import matplotlib.pyplot as plt\n","\n","# x = np.array(range(density))\n","# plt.plot(x,x_list[0][:density])\n","# plt.plot(x,x_list[0][density:])\n","\n","\n","# # a = y_list[0][0]\n","# tau = y_list[0][0]\n","# # a2 = y_list[0][2]\n","# tau2 = y_list[0][1]\n","# # a3 = y_list[0][4]\n","# tau3 = y_list[0][2]\n","\n","# print(a,a2,a3)\n","\n","\n","\n","# plt.plot(x,f(x,a,tau))\n","# plt.plot(x,f(x,a2,tau2))\n","# # plt.plot(x,f(x,a3,tau3))\n","# plt.show()\n","\n","\n"]},{"cell_type":"code","execution_count":122,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1898,"status":"ok","timestamp":1647880148872,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"Khp6zsKhol2e","outputId":"1099bade-d76b-4088-9e90-e8815b67a6bd"},"outputs":[{"output_type":"stream","name":"stdout","text":["(100000, 1802)\n","(100000, 3)\n"]}],"source":["\n","x_list = tf.keras.utils.normalize(x_list)\n","# y_list = tf.keras.utils.normalize(y_list)\n","\n","print(x_list.shape)\n","print(y_list.shape)\n","\n","\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(x_list, y_list, test_size=0.10, random_state=40)\n"]},{"cell_type":"code","execution_count":123,"metadata":{"id":"CPHyv5EymzWj","executionInfo":{"status":"ok","timestamp":1647880151136,"user_tz":0,"elapsed":458,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout\n","from tensorflow.keras import layers\n","\n","\n","model = Sequential()\n","model.add(Dense(400, input_dim=density*2))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(100, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(3, activation='relu'))"]},{"cell_type":"code","execution_count":124,"metadata":{"id":"yY5ay5zMXyP8","executionInfo":{"status":"ok","timestamp":1647880157661,"user_tz":0,"elapsed":182,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["def ftf(a,tau):\n","  return a*tf.math.exp(np.array(range(100))/tau)\n","\n","def error_function(y,y_real):\n","\n","  # a,tau = tf.split(y,num_or_size_of_splits=2,axis=1)\n","  # a_real,tau_real = tf.split(y,num_or_size_of_splits=2,axis=1)\n","\n","  return tf.math.reduce_sum(tf.math.abs(y-y_real))\n","\n"]},{"cell_type":"code","execution_count":125,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":923676,"status":"ok","timestamp":1647881082206,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"YPS1N9kGnRFI","outputId":"be526092-3f82-4490-91cb-890551ae5f9c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","563/563 [==============================] - 29s 49ms/step - loss: 0.2074 - accuracy: 0.6531 - val_loss: 0.0784 - val_accuracy: 0.7108\n","Epoch 2/30\n","563/563 [==============================] - 27s 49ms/step - loss: 0.1047 - accuracy: 0.6776 - val_loss: 0.0615 - val_accuracy: 0.7450\n","Epoch 3/30\n","563/563 [==============================] - 27s 49ms/step - loss: 0.0958 - accuracy: 0.7028 - val_loss: 0.0581 - val_accuracy: 0.7621\n","Epoch 4/30\n","563/563 [==============================] - 27s 49ms/step - loss: 0.0924 - accuracy: 0.7138 - val_loss: 0.0572 - val_accuracy: 0.7730\n","Epoch 5/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0898 - accuracy: 0.7200 - val_loss: 0.0562 - val_accuracy: 0.7792\n","Epoch 6/30\n","563/563 [==============================] - 27s 49ms/step - loss: 0.0864 - accuracy: 0.7275 - val_loss: 0.0544 - val_accuracy: 0.7847\n","Epoch 7/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0846 - accuracy: 0.7328 - val_loss: 0.0536 - val_accuracy: 0.7898\n","Epoch 8/30\n","563/563 [==============================] - 27s 47ms/step - loss: 0.0819 - accuracy: 0.7370 - val_loss: 0.0514 - val_accuracy: 0.7918\n","Epoch 9/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0792 - accuracy: 0.7431 - val_loss: 0.0536 - val_accuracy: 0.7924\n","Epoch 10/30\n","563/563 [==============================] - 27s 47ms/step - loss: 0.0761 - accuracy: 0.7473 - val_loss: 0.0488 - val_accuracy: 0.8000\n","Epoch 11/30\n","563/563 [==============================] - 27s 47ms/step - loss: 0.0737 - accuracy: 0.7515 - val_loss: 0.0474 - val_accuracy: 0.8053\n","Epoch 12/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0715 - accuracy: 0.7573 - val_loss: 0.0470 - val_accuracy: 0.8052\n","Epoch 13/30\n","563/563 [==============================] - 27s 47ms/step - loss: 0.0691 - accuracy: 0.7592 - val_loss: 0.0448 - val_accuracy: 0.8077\n","Epoch 14/30\n","563/563 [==============================] - 27s 47ms/step - loss: 0.0668 - accuracy: 0.7629 - val_loss: 0.0439 - val_accuracy: 0.8086\n","Epoch 15/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0648 - accuracy: 0.7670 - val_loss: 0.0433 - val_accuracy: 0.8078\n","Epoch 16/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0633 - accuracy: 0.7688 - val_loss: 0.0424 - val_accuracy: 0.8113\n","Epoch 17/30\n","563/563 [==============================] - 28s 49ms/step - loss: 0.0623 - accuracy: 0.7700 - val_loss: 0.0409 - val_accuracy: 0.8075\n","Epoch 18/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0610 - accuracy: 0.7719 - val_loss: 0.0428 - val_accuracy: 0.8108\n","Epoch 19/30\n","563/563 [==============================] - 26s 47ms/step - loss: 0.0601 - accuracy: 0.7722 - val_loss: 0.0418 - val_accuracy: 0.8103\n","Epoch 20/30\n","563/563 [==============================] - 26s 47ms/step - loss: 0.0583 - accuracy: 0.7748 - val_loss: 0.0391 - val_accuracy: 0.8123\n","Epoch 21/30\n","563/563 [==============================] - 26s 47ms/step - loss: 0.0575 - accuracy: 0.7776 - val_loss: 0.0401 - val_accuracy: 0.8125\n","Epoch 22/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0559 - accuracy: 0.7765 - val_loss: 0.0402 - val_accuracy: 0.8126\n","Epoch 23/30\n","563/563 [==============================] - 27s 48ms/step - loss: 0.0550 - accuracy: 0.7777 - val_loss: 0.0370 - val_accuracy: 0.8081\n","Epoch 24/30\n","563/563 [==============================] - 43s 76ms/step - loss: 0.0543 - accuracy: 0.7800 - val_loss: 0.0388 - val_accuracy: 0.8118\n","Epoch 25/30\n","563/563 [==============================] - 31s 54ms/step - loss: 0.0538 - accuracy: 0.7805 - val_loss: 0.0364 - val_accuracy: 0.8030\n","Epoch 26/30\n","563/563 [==============================] - 39s 70ms/step - loss: 0.0530 - accuracy: 0.7826 - val_loss: 0.0375 - val_accuracy: 0.8129\n","Epoch 27/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0526 - accuracy: 0.7836 - val_loss: 0.0368 - val_accuracy: 0.8139\n","Epoch 28/30\n","563/563 [==============================] - 41s 74ms/step - loss: 0.0524 - accuracy: 0.7810 - val_loss: 0.0357 - val_accuracy: 0.8136\n","Epoch 29/30\n","563/563 [==============================] - 34s 61ms/step - loss: 0.0517 - accuracy: 0.7843 - val_loss: 0.0388 - val_accuracy: 0.8147\n","Epoch 30/30\n","563/563 [==============================] - 32s 57ms/step - loss: 0.0515 - accuracy: 0.7833 - val_loss: 0.0353 - val_accuracy: 0.8120\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fc2fec83210>"]},"metadata":{},"execution_count":125}],"source":["model.compile(optimizer= tf.keras.optimizers.Adam(learning_rate=1e-5), loss=\"mean_squared_error\", metrics=[\"accuracy\"])\n","model.fit(X_train, y_train, batch_size=128, epochs=30, validation_split=0.2)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-TYn_kpdp8Nl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647269232585,"user_tz":0,"elapsed":3135,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"10c842be-a570-42e2-ec1c-c2f104fe057c"},"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 3s 9ms/step - loss: 0.0475 - accuracy: 0.8035\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.047512609511613846, 0.8034999966621399]"]},"metadata":{},"execution_count":24}],"source":["model.evaluate(X_test,y_test)"]},{"cell_type":"code","execution_count":154,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":234,"status":"ok","timestamp":1647881421782,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"dhTzzYJX3oRA","outputId":"80b3ac7b-abcd-49e3-9d33-73b19bcc8e1b"},"outputs":[{"output_type":"stream","name":"stdout","text":["[array([0.17308192, 1.10917143, 0.42380148])]\n"]}],"source":["m_list = []\n","n_list = []\n","for i in range(1):\n","  (m,n) = generate_dataset_three()\n","  m_list.append(m)\n","  n_list.append(n)\n","\n","\n","m = np.array(m_list)\n","m = tf.keras.utils.normalize(m)\n","# m = np.log(m)\n","n = np.array(n_list)\n","\n","print(n_list)"]},{"cell_type":"code","execution_count":155,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1647881422572,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"aVo1WPRf35zp","outputId":"d1b2bb7e-792c-41b5-e1bc-6f2af4cd631a"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0.27320623 1.1224611  0.43505213]\n"]}],"source":["\n","pred_n = model.predict(m)\n","print(np.array(pred_n[0]))"]},{"cell_type":"code","source":["a = 0.5\n","tau = n[0][0]\n","a2 = 0.5\n","tau2 = n[0][1]\n","a3 = 0.5\n","tau3 = n[0][2]\n","\n","print(tau,tau2,tau3)\n","\n","x = x[:density]\n","\n","plt.plot(x,(f(x,a,tau*4.9)+ f(x,a2,tau2*10) + f(x,a3,tau3*85)))\n","\n","plt.plot(x,(f(x,a,pred_n[0][0]*4.9)+ f(x,a2,pred_n[0][1]*10) + f(x,a3,pred_n[0][2]*85)))\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"B7vVCHaHWjVg","executionInfo":{"status":"ok","timestamp":1647881423873,"user_tz":0,"elapsed":288,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"5664d02c-aac8-4f3d-cbe9-e88d550440d3"},"execution_count":156,"outputs":[{"output_type":"stream","name":"stdout","text":["0.17308191588417962 1.1091714254633824 0.4238014770689957\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XeRYfRbZ4A4N"},"outputs":[],"source":["!mkdir -p saved_model"]},{"cell_type":"code","execution_count":158,"metadata":{"id":"e0U6sNll8yw5","executionInfo":{"status":"ok","timestamp":1647881465624,"user_tz":0,"elapsed":452,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["\n","model.save(\"gdrive/MyDrive/mymodel21MarchPeakt.h5\")"]},{"cell_type":"code","execution_count":159,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":214,"status":"ok","timestamp":1647881493420,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"xghcU9wAE1Lu","outputId":"cf481d9c-0f08-4c22-b43d-75b91bd66aab"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Physics.pdf',\n"," '0081_Statement_Of_Entry.pdf',\n"," '0620_s10_qp_62.pdf',\n"," 'Contact Information.gform',\n"," 'Untitled spreadsheet.gsheet',\n"," 'Untitled document (9).gdoc',\n"," 'Google_Stock_Price_Train.gsheet',\n"," 'Untitled document (8).gdoc',\n"," 'Untitled document (7).gdoc',\n"," 'KCL Accommodation Offer - Madhanrajan.pdf',\n"," 'KCL Accommodation Offer - Madhanrajan.gdoc',\n"," 'KCL CAS Letter - Madhanrajan VARADHARAJAN.pdf',\n"," '2018_19 Residence Agreement.pdf',\n"," 'Student_Confirmation_of_Study_Letter_1852451.pdf',\n"," 'Startup Video',\n"," 'IMG_0376.JPG',\n"," 'Formula-sheet.pdf',\n"," 'FINAL Investigating the relationship between the period of simple  pendulum.docx',\n"," 'FINAL Investigating the relationship between the period of simple  pendulum.gdoc',\n"," 'Shian Housing Association website TEXT for HOME PAGE.docx',\n"," 'Shian Housing Association website TEXT for HOME PAGE.gdoc',\n"," \"Madhanrajan's Resume (1).pdf\",\n"," 'Gurantor Form.pdf',\n"," \"Madhan's Resume.pdf\",\n"," 'Untitled form.gform',\n"," 'Madhanrajan Varadharajan Reports Summary - 23andMe.pdf',\n"," 'Classroom',\n"," 'Advantage Education Malaysia.gform',\n"," 'snapshot2.jpg',\n"," 'snapshot2.png',\n"," \"Madhanrajan's Resume.pdf\",\n"," 'cold calling.gdoc',\n"," 'Untitled document (6).gdoc',\n"," 'stock.gdoc',\n"," 'stock2info.gdoc',\n"," 'stock2info.pdf',\n"," 'Untitled document (5).gdoc',\n"," 'Untitled document (4).gdoc',\n"," 'Trader Insight Pitch.gdoc',\n"," 'Untitled document (3).gdoc',\n"," 'Untitled document (2).gdoc',\n"," 'Untitled document (1).gdoc',\n"," '4 2 2021 .gdoc',\n"," 'Untitled document.gdoc',\n"," '8 2 2021.gdoc',\n"," 'ps2.docx',\n"," 'ps3.gdoc',\n"," 'Notability (2)',\n"," 'Notability (1)',\n"," 'Notability',\n"," 'Coversheet.docx',\n"," \"Madhanrajan's CV.pdf\",\n"," 'Curation',\n"," 'Colab Notebooks',\n"," 'Idea Factory 2022.docx',\n"," 'mymodel14March.h5',\n"," 'mymodelpredicta.h5',\n"," 'mymodel21MarchPeakt.h5']"]},"metadata":{},"execution_count":159}],"source":["import os\n","\n","os.listdir(\"gdrive/MyDrive\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wV8Pvwa9FXGn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647013346992,"user_tz":0,"elapsed":525,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"ea059953-c9bc-47f3-fd5f-b504201ddcd1"},"outputs":[{"output_type":"stream","name":"stdout","text":["mymodel  mymodel.h5\n"]}],"source":["!ls saved_model/"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gCXdo52yoLMp","executionInfo":{"status":"ok","timestamp":1647881458832,"user_tz":0,"elapsed":3306,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"61ee5153-1d82-4369-c519-a3016fa2efb8"},"execution_count":157,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import os\n","\n","os.listdir(\"gdrive/MyDrive\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5MAp2hupoqHE","executionInfo":{"status":"ok","timestamp":1647277472453,"user_tz":0,"elapsed":241,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"13882e8d-37e6-41ee-ea35-cc54f327fab0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Physics.pdf',\n"," '0081_Statement_Of_Entry.pdf',\n"," '0620_s10_qp_62.pdf',\n"," 'Contact Information.gform',\n"," 'Untitled spreadsheet.gsheet',\n"," 'Untitled document (9).gdoc',\n"," 'Google_Stock_Price_Train.gsheet',\n"," 'Untitled document (8).gdoc',\n"," 'Untitled document (7).gdoc',\n"," 'KCL Accommodation Offer - Madhanrajan.pdf',\n"," 'KCL Accommodation Offer - Madhanrajan.gdoc',\n"," 'KCL CAS Letter - Madhanrajan VARADHARAJAN.pdf',\n"," '2018_19 Residence Agreement.pdf',\n"," 'Student_Confirmation_of_Study_Letter_1852451.pdf',\n"," 'Startup Video',\n"," 'IMG_0376.JPG',\n"," 'Formula-sheet.pdf',\n"," 'FINAL Investigating the relationship between the period of simple  pendulum.docx',\n"," 'FINAL Investigating the relationship between the period of simple  pendulum.gdoc',\n"," 'Shian Housing Association website TEXT for HOME PAGE.docx',\n"," 'Shian Housing Association website TEXT for HOME PAGE.gdoc',\n"," \"Madhanrajan's Resume (1).pdf\",\n"," 'Gurantor Form.pdf',\n"," \"Madhan's Resume.pdf\",\n"," 'Untitled form.gform',\n"," 'Madhanrajan Varadharajan Reports Summary - 23andMe.pdf',\n"," 'Classroom',\n"," 'Advantage Education Malaysia.gform',\n"," 'snapshot2.jpg',\n"," 'snapshot2.png',\n"," \"Madhanrajan's Resume.pdf\",\n"," 'cold calling.gdoc',\n"," 'Untitled document (6).gdoc',\n"," 'stock.gdoc',\n"," 'stock2info.gdoc',\n"," 'stock2info.pdf',\n"," 'Untitled document (5).gdoc',\n"," 'Untitled document (4).gdoc',\n"," 'Trader Insight Pitch.gdoc',\n"," 'Untitled document (3).gdoc',\n"," 'Untitled document (2).gdoc',\n"," 'Untitled document (1).gdoc',\n"," '4 2 2021 .gdoc',\n"," 'Untitled document.gdoc',\n"," '8 2 2021.gdoc',\n"," 'ps2.docx',\n"," 'ps3.gdoc',\n"," 'Notability (2)',\n"," 'Notability (1)',\n"," 'Notability',\n"," 'Coversheet.docx',\n"," \"Madhanrajan's CV.pdf\",\n"," 'Curation',\n"," 'Colab Notebooks',\n"," 'Idea Factory 2022.docx']"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":[""],"metadata":{"id":"VvddgbClqF4O"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"TPU","colab":{"collapsed_sections":[],"name":"21 March-predict lifetime from peak","provenance":[{"file_id":"1XvfWufcgwFbznY5f0mNEKqYfoqBaTELy","timestamp":1647268261741},{"file_id":"1dzyDXFpzavCg-8beUBTlvDa9fQx2L-Aa","timestamp":1646946949513},{"file_id":"1g1Lfc54hLeV-o7TRP7poHzXNGNCkWoBO","timestamp":1643579564167},{"file_id":"1d2bsw8hKS6LZCLOTy-u_0eiVvaFSznbd","timestamp":1643569030471}],"authorship_tag":"ABX9TyMChVbzEzZux1diSyDB4zHS"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
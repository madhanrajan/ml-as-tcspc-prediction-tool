{"cells":[{"cell_type":"code","execution_count":26,"metadata":{"id":"84-3c5b7mLPS","executionInfo":{"status":"ok","timestamp":1648564078221,"user_tz":-60,"elapsed":256,"user":{"displayName":"Madhan Rajan","userId":"11949160929832065290"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import scipy.stats as stats\n","import math\n","\n","density = 100\n","\n","# Modified 22 March\n","def generate_gaussian():\n","    mu = np.random.uniform(low=5,high=200)\n","    variance = 20\n","    sigma = math.sqrt(variance)\n","    x = np.linspace(mu - 3*sigma, mu + 3*sigma, 25)\n","    y = stats.norm.pdf(x, mu, sigma) * np.random.uniform(low=1, high=8)\n","    y = y*500\n","\n","    pref_x = np.array(range(density))\n","    new_y = np.interp(pref_x,x,y)\n","\n","    new_y += np.random.uniform(low=0,high=20,size=(density,))\n","\n","    return (pref_x,new_y)\n","\n","# def generate_gaussian():\n","#     mu = np.random.uniform(low=5,high=10)\n","#     variance = 1\n","#     sigma = math.sqrt(variance)\n","#     x = np.linspace(mu - 3*sigma, mu + 3*sigma, 25)\n","#     y = stats.norm.pdf(x, mu, sigma) * 50\n","\n","\n","#     pref_x = np.array(range(density))\n","#     new_y = np.interp(pref_x,x,y)\n","\n","#     new_y += np.random.uniform(low=0,high=2,size=(density,))\n","\n","#     return (pref_x,new_y)\n","\n","\n","\n","def f(x,a,tau):\n","    return a * np.exp(-x/tau)\n","\n","\n","def generate_decay_curve(amin,amax,taumin,taumax):\n","    a = np.random.uniform(low=amin,high=amax)\n","    tau = np.random.uniform(low=taumin,high=taumax)\n","    x = np.array(range(density))\n","    y = f(x,a,tau)\n","\n","    return (y,a,tau)\n","    \n","\n","def generate_dataset_one():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve(high=20)\n","    z = np.convolve(y,dec_y)[:density]\n","    z += np.random.uniform(0,0.2)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,0,0,0,0))\n","\n","    return (input,output)"]},{"cell_type":"code","source":["def generate_dataset_two():\n","    (x,y) = generate_gaussian()\n","    \n","    (dec_y,a,t) = generate_decay_curve(amin=0.1,amax=1,taumin=0.1,taumax=15)\n","    (dec_y_2,a2,t2) = generate_decay_curve(amin=0.1,amax=1,taumin=15,taumax=100)\n","\n","    new_dec = dec_y + dec_y_2\n","\n","    t = t/15\n","    t2 = (t2 -  15)/85\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    z = z +  np.random.uniform(low=-z/6,high=z/6, size=density)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array([a,t,a2,t2,0,0])\n","    output = output.reshape(6)\n","\n","    return (input,output)"],"metadata":{"id":"lPzB6AjSW1u9","executionInfo":{"status":"ok","timestamp":1648564079566,"user_tz":-60,"elapsed":2,"user":{"displayName":"Madhan Rajan","userId":"11949160929832065290"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["def generate_dataset_three():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve(high=6.7)\n","    (dec_y_2,a2,t2) = generate_decay_curve(high=6.7)\n","    (dec_y_3,a3,t3) = generate_decay_curve(high=6.7)\n","\n","    new_dec = dec_y + dec_y_2 + dec_y_3\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    z += np.random.uniform(0,0.2)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array(sorted([[a,t],[a2,t2],[a3,t3]]))\n","    output = output.reshape(6)\n","\n","    return (input,output)"],"metadata":{"id":"Q9y1bMKtXy22","executionInfo":{"status":"ok","timestamp":1648564082831,"user_tz":-60,"elapsed":236,"user":{"displayName":"Madhan Rajan","userId":"11949160929832065290"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","execution_count":24,"metadata":{"id":"EbR3K0p8mUF8","executionInfo":{"status":"ok","timestamp":1648564026889,"user_tz":-60,"elapsed":36770,"user":{"displayName":"Madhan Rajan","userId":"11949160929832065290"}}},"outputs":[],"source":["\n","x_list = []\n","y_list = []\n","for i in range(10):\n","  \n","    # (x,y) = generate_dataset_one()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n","    (x,y) = generate_dataset_two()\n","    \n","    x_list.append(x)\n","    y_list.append(y)\n","\n","    # (x,y) = generate_dataset_three()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"executionInfo":{"elapsed":811,"status":"ok","timestamp":1648564030874,"user":{"displayName":"Madhan Rajan","userId":"11949160929832065290"},"user_tz":-60},"id":"hbgNkuaAm4RA","outputId":"9cf55eca-39c8-4a1a-8d44-764664b9e39a"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","import sklearn\n","\n","x_list = np.array(x_list)\n","y_list = np.array(y_list)\n","\n","x_list, y_list = sklearn.utils.shuffle(x_list,y_list)\n","\n","\n","import matplotlib.pyplot as plt\n","\n","x = np.array(range(density))\n","# plt.plot(x,x_list[0][:density])\n","plt.plot(x,x_list[0][density:])\n","\n","\n","a = y_list[0][0]\n","tau = y_list[0][1]\n","a2 = y_list[0][2]\n","tau2 = y_list[0][3]\n","a3 = y_list[0][4]\n","tau3 = y_list[0][5]\n","\n","tau = tau * 15\n","tau2 = tau*85 + 15\n","\n","\n","\n","# plt.plot(x,f(x,a,tau))\n","# plt.plot(x,f(x,a2,tau2))\n","# plt.plot(x,f(x,a3,tau3))\n","plt.show()\n","\n","\n"]},{"cell_type":"code","source":["\n","x_list = tf.keras.utils.normalize(x_list)\n","# y_list = tf.keras.utils.normalize(y_list)\n","\n","print(x_list.shape)\n","print(y_list.shape)\n","\n","\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(x_list, y_list, test_size=0.10, random_state=40)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Khp6zsKhol2e","executionInfo":{"status":"ok","timestamp":1644083611639,"user_tz":0,"elapsed":11,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"62fc7a51-f383-4627-9f61-0bbbe0361b26"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(100000, 200)\n","(100000, 6)\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CPHyv5EymzWj"},"outputs":[],"source":["import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras import layers\n","\n","\n","model = Sequential()\n","model.add(Dense(400, activation='relu', input_dim=density*2))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(100, activation='relu'))\n","model.add(Dense(6, activation='relu'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YPS1N9kGnRFI","outputId":"bff1b05a-d32b-422c-aa79-89087a91cc32","executionInfo":{"status":"ok","timestamp":1644083886173,"user_tz":0,"elapsed":22632,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["563/563 [==============================] - 22s 37ms/step - loss: 149.2974 - accuracy: 0.4988 - val_loss: 148.2635 - val_accuracy: 0.5033\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f6651fb3c90>"]},"metadata":{},"execution_count":35}],"source":["model.compile(optimizer= tf.keras.optimizers.Adam(learning_rate=1e-5), loss='mean_squared_error', metrics=[\"accuracy\"])\n","model.fit(X_train, y_train, batch_size=128, epochs=1, validation_split=0.2)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-TYn_kpdp8Nl"},"outputs":[],"source":["model.evaluate(X_test,y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dhTzzYJX3oRA","outputId":"e518ff3f-8795-4fa0-8dfd-c491f59b0dcf","executionInfo":{"status":"ok","timestamp":1644083522644,"user_tz":0,"elapsed":235,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[array([ 1.65999737, 22.89273202,  2.6182418 , 30.07320246,  0.        ,\n","        0.        ]), array([ 0.30783292, 25.74093993,  3.47562423, 10.65142736,  0.        ,\n","        0.        ]), array([ 2.00287654, 26.44994913,  3.9459112 , 13.18710092,  0.        ,\n","        0.        ]), array([ 2.92143383,  6.68913577,  2.88198701, 47.46652856,  0.        ,\n","        0.        ]), array([ 1.64435388,  7.56121497,  3.80601249, 40.4588735 ,  0.        ,\n","        0.        ])]\n"]}],"source":["m_list = []\n","n_list = []\n","for i in range(5):\n","  (m,n) = generate_dataset_two()\n","  m_list.append(m)\n","  n_list.append(n)\n","\n","\n","m = np.array(m_list)\n","m = tf.keras.utils.normalize(m)\n","n = np.array(n_list)\n","\n","print(n_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aVo1WPRf35zp","executionInfo":{"status":"ok","timestamp":1644083524829,"user_tz":0,"elapsed":218,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"30a7f90c-916a-49f9-e562-afbafd5db314"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 2.6572688 25.660082   2.62493   25.58958    0.         0.       ]\n"," [ 2.8811595 11.088837   2.8370922 11.105765   0.         0.       ]\n"," [ 2.757076  18.533533   2.6905773 18.630444   0.         0.       ]\n"," [ 2.8066108 23.022715   2.7918615 22.965805   0.         0.       ]\n"," [ 2.8368237 25.021496   2.8089726 24.900305   0.         0.       ]]\n"]}],"source":["pred_n = model.predict(m)\n","print(pred_n)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XeRYfRbZ4A4N"},"outputs":[],"source":["n_ = np.absolute(pred_n-n)/ n\n","\n","N_ = 1 - n_\n","\n","print(np.average(N_, axis=0))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e0U6sNll8yw5"},"outputs":[],"source":["model.save(\"mymodel\")"]}],"metadata":{"accelerator":"TPU","colab":{"collapsed_sections":[],"name":"2setsofdata","provenance":[{"file_id":"1d2bsw8hKS6LZCLOTy-u_0eiVvaFSznbd","timestamp":1643569030471}],"authorship_tag":"ABX9TyOFf+NBifjkjA1BaDPbNgdh"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
{"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"84-3c5b7mLPS","executionInfo":{"status":"ok","timestamp":1643579240198,"user_tz":0,"elapsed":677,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import scipy.stats as stats\n","import math\n","\n","density = 100\n","\n","def generate_gaussian():\n","    mu = np.random.uniform(low=5,high=10)\n","    variance = 1\n","    sigma = math.sqrt(variance)\n","    x = np.linspace(mu - 3*sigma, mu + 3*sigma, 25)\n","    y = stats.norm.pdf(x, mu, sigma) * 50\n","\n","\n","    pref_x = np.array(range(density))\n","    new_y = np.interp(pref_x,x,y)\n","\n","    new_y += np.random.uniform(low=0,high=2,size=(density,))\n","\n","    return (pref_x,new_y)\n","\n","\n","\n","def f(x,a,tau):\n","    return a * np.exp(-x/tau)\n","\n","\n","def generate_decay_curve(high=5):\n","    a = np.random.uniform(low=0.1,high=high)\n","    tau = np.random.uniform(low=1,high=50)\n","    x = np.array(range(density))\n","    y = f(x,a,tau)\n","\n","    return (y,a,tau)\n","    \n","\n","def generate_dataset_one():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve(high=20)\n","    z = np.convolve(y,dec_y)[:density]\n","    z += np.random.uniform(0,0.2)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,0,0,0,0))\n","\n","    return (input,output)"]},{"cell_type":"code","source":["def generate_dataset_two():\n","    (x,y) = generate_gaussian()\n","    \n","    (dec_y,a,t) = generate_decay_curve(high=5)\n","    (dec_y_2,a2,t2) = generate_decay_curve(high=5)\n","\n","    new_dec = dec_y + dec_y_2\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    z += np.random.uniform(0,0.2)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,a2,t2,0,0))\n","\n","    return (input,output)"],"metadata":{"id":"lPzB6AjSW1u9","executionInfo":{"status":"ok","timestamp":1643579240199,"user_tz":0,"elapsed":3,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["def generate_dataset_three():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve(high=6.7)\n","    (dec_y_2,a2,t2) = generate_decay_curve(high=6.7)\n","    (dec_y_3,a3,t3) = generate_decay_curve(high=6.7)\n","\n","    new_dec = dec_y + dec_y_2 + dec_y_3\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    z += np.random.uniform(0,0.2)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,a2,t2,a3,t3))\n","\n","    return (input,output)"],"metadata":{"id":"Q9y1bMKtXy22","executionInfo":{"status":"ok","timestamp":1643579240199,"user_tz":0,"elapsed":2,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":22,"metadata":{"id":"EbR3K0p8mUF8","executionInfo":{"status":"ok","timestamp":1643579458629,"user_tz":0,"elapsed":35121,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["\"\"\n","x_list = []\n","y_list = []\n","for i in range(100000):\n","  \n","    # (x,y) = generate_dataset_one()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n","    (x,y) = generate_dataset_two()\n","    \n","    x_list.append(x)\n","    y_list.append(y)\n","\n","    # (x,y) = generate_dataset_three()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"elapsed":59366,"status":"ok","timestamp":1643579517987,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"hbgNkuaAm4RA","outputId":"44421763-76c8-42ac-c933-8d9e2cc32708"},"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","import sklearn\n","\n","x_list = np.array(x_list)\n","y_list = np.array(y_list)\n","\n","x_list, y_list = sklearn.utils.shuffle(x_list,y_list)\n","\n","\n","import matplotlib.pyplot as plt\n","\n","x = np.array(range(density))\n","plt.plot(x,x_list[0][:density])\n","plt.plot(x,x_list[0][density:])\n","\n","\n","a = y_list[2][0]\n","tau = y_list[2][1]\n","a2 = y_list[2][2]\n","tau2 = y_list[2][3]\n","a3 = y_list[2][4]\n","tau3 = y_list[2][5]\n","\n","\n","\n","\n","\n","plt.plot(x,f(x,a,tau))\n","plt.plot(x,f(x,a2,tau2))\n","# plt.plot(x,f(x,a3,tau3))\n","plt.show()\n","\n","\n"]},{"cell_type":"code","source":["\n","x_list = tf.keras.utils.normalize(x_list)\n","# y_list = tf.keras.utils.normalize(y_list)\n","\n","print(x_list.shape)\n","print(y_list.shape)\n","\n","\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(x_list, y_list, test_size=0.10, random_state=40)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Khp6zsKhol2e","executionInfo":{"status":"ok","timestamp":1643579517987,"user_tz":0,"elapsed":12,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"8e3470e6-e3b2-49ff-9ef4-f3e102ea6d72"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["(100000, 200)\n","(100000, 6)\n"]}]},{"cell_type":"code","execution_count":27,"metadata":{"id":"CPHyv5EymzWj","executionInfo":{"status":"ok","timestamp":1643579775209,"user_tz":0,"elapsed":258,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","from tensorflow.keras import layers\n","\n","\n","model = Sequential()\n","model.add(Dense(400, activation='relu', input_dim=density*2))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(layers.Dropout(0.5))\n","model.add(Dense(6, activation='relu'))"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YPS1N9kGnRFI","outputId":"551e09fc-8ae6-41a4-e061-04616430c45b","executionInfo":{"status":"ok","timestamp":1643581839275,"user_tz":0,"elapsed":2063271,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","563/563 [==============================] - 21s 35ms/step - loss: 159.4433 - accuracy: 0.4970 - val_loss: 58.9044 - val_accuracy: 0.5017\n","Epoch 2/100\n","563/563 [==============================] - 20s 36ms/step - loss: 54.2594 - accuracy: 0.4970 - val_loss: 45.0393 - val_accuracy: 0.5017\n","Epoch 3/100\n","563/563 [==============================] - 20s 35ms/step - loss: 48.4224 - accuracy: 0.5000 - val_loss: 43.4304 - val_accuracy: 0.5017\n","Epoch 4/100\n","563/563 [==============================] - 19s 33ms/step - loss: 47.3792 - accuracy: 0.5005 - val_loss: 42.7858 - val_accuracy: 0.4973\n","Epoch 5/100\n","563/563 [==============================] - 19s 35ms/step - loss: 46.8156 - accuracy: 0.4977 - val_loss: 42.6445 - val_accuracy: 0.5038\n","Epoch 6/100\n","563/563 [==============================] - 19s 35ms/step - loss: 46.5996 - accuracy: 0.4960 - val_loss: 42.4753 - val_accuracy: 0.4952\n","Epoch 7/100\n","563/563 [==============================] - 20s 35ms/step - loss: 46.2142 - accuracy: 0.4975 - val_loss: 42.2681 - val_accuracy: 0.5024\n","Epoch 8/100\n","563/563 [==============================] - 21s 36ms/step - loss: 46.0498 - accuracy: 0.4963 - val_loss: 42.0001 - val_accuracy: 0.4993\n","Epoch 9/100\n","563/563 [==============================] - 19s 34ms/step - loss: 45.8559 - accuracy: 0.4976 - val_loss: 41.7550 - val_accuracy: 0.4951\n","Epoch 10/100\n","563/563 [==============================] - 20s 35ms/step - loss: 45.5237 - accuracy: 0.5000 - val_loss: 41.6683 - val_accuracy: 0.4958\n","Epoch 11/100\n","563/563 [==============================] - 20s 35ms/step - loss: 45.3494 - accuracy: 0.4985 - val_loss: 41.6565 - val_accuracy: 0.4964\n","Epoch 12/100\n","563/563 [==============================] - 20s 35ms/step - loss: 45.1778 - accuracy: 0.4988 - val_loss: 41.3659 - val_accuracy: 0.4962\n","Epoch 13/100\n","563/563 [==============================] - 20s 35ms/step - loss: 44.9407 - accuracy: 0.4974 - val_loss: 41.3844 - val_accuracy: 0.4979\n","Epoch 14/100\n","563/563 [==============================] - 19s 34ms/step - loss: 44.7581 - accuracy: 0.4963 - val_loss: 41.1689 - val_accuracy: 0.4968\n","Epoch 15/100\n","563/563 [==============================] - 20s 36ms/step - loss: 44.5716 - accuracy: 0.5001 - val_loss: 41.0272 - val_accuracy: 0.4982\n","Epoch 16/100\n","563/563 [==============================] - 20s 36ms/step - loss: 44.3070 - accuracy: 0.4991 - val_loss: 40.9507 - val_accuracy: 0.5009\n","Epoch 17/100\n","563/563 [==============================] - 20s 36ms/step - loss: 44.2201 - accuracy: 0.4989 - val_loss: 40.9318 - val_accuracy: 0.4991\n","Epoch 18/100\n","563/563 [==============================] - 20s 36ms/step - loss: 44.0291 - accuracy: 0.4990 - val_loss: 40.7756 - val_accuracy: 0.4995\n","Epoch 19/100\n","563/563 [==============================] - 20s 35ms/step - loss: 43.8142 - accuracy: 0.4997 - val_loss: 40.6896 - val_accuracy: 0.5002\n","Epoch 20/100\n","563/563 [==============================] - 19s 34ms/step - loss: 43.7664 - accuracy: 0.4957 - val_loss: 40.6029 - val_accuracy: 0.4964\n","Epoch 21/100\n","563/563 [==============================] - 19s 34ms/step - loss: 43.5651 - accuracy: 0.4955 - val_loss: 40.5662 - val_accuracy: 0.4988\n","Epoch 22/100\n","563/563 [==============================] - 19s 34ms/step - loss: 43.5148 - accuracy: 0.4972 - val_loss: 40.4238 - val_accuracy: 0.4978\n","Epoch 23/100\n","563/563 [==============================] - 20s 36ms/step - loss: 43.3155 - accuracy: 0.4972 - val_loss: 40.3770 - val_accuracy: 0.4948\n","Epoch 24/100\n","563/563 [==============================] - 20s 35ms/step - loss: 43.1209 - accuracy: 0.5033 - val_loss: 40.2919 - val_accuracy: 0.4976\n","Epoch 25/100\n","563/563 [==============================] - 19s 34ms/step - loss: 43.0939 - accuracy: 0.4970 - val_loss: 40.2673 - val_accuracy: 0.4981\n","Epoch 26/100\n","563/563 [==============================] - 19s 34ms/step - loss: 42.8767 - accuracy: 0.4992 - val_loss: 40.6147 - val_accuracy: 0.4948\n","Epoch 27/100\n","563/563 [==============================] - 20s 35ms/step - loss: 42.8201 - accuracy: 0.4988 - val_loss: 40.2015 - val_accuracy: 0.4983\n","Epoch 28/100\n","563/563 [==============================] - 23s 41ms/step - loss: 42.7711 - accuracy: 0.4960 - val_loss: 40.0424 - val_accuracy: 0.4956\n","Epoch 29/100\n","563/563 [==============================] - 19s 34ms/step - loss: 42.5778 - accuracy: 0.4999 - val_loss: 39.9819 - val_accuracy: 0.4985\n","Epoch 30/100\n","563/563 [==============================] - 19s 34ms/step - loss: 42.5612 - accuracy: 0.4982 - val_loss: 39.9532 - val_accuracy: 0.4953\n","Epoch 31/100\n","563/563 [==============================] - 19s 34ms/step - loss: 42.3983 - accuracy: 0.4990 - val_loss: 39.9639 - val_accuracy: 0.4951\n","Epoch 32/100\n","563/563 [==============================] - 20s 35ms/step - loss: 42.4207 - accuracy: 0.4970 - val_loss: 39.8228 - val_accuracy: 0.4958\n","Epoch 33/100\n","563/563 [==============================] - 20s 36ms/step - loss: 42.2348 - accuracy: 0.4991 - val_loss: 40.1048 - val_accuracy: 0.4962\n","Epoch 34/100\n","563/563 [==============================] - 20s 35ms/step - loss: 42.2212 - accuracy: 0.4996 - val_loss: 39.7661 - val_accuracy: 0.4966\n","Epoch 35/100\n","563/563 [==============================] - 20s 35ms/step - loss: 42.2217 - accuracy: 0.4965 - val_loss: 39.7035 - val_accuracy: 0.4968\n","Epoch 36/100\n","563/563 [==============================] - 20s 35ms/step - loss: 42.0335 - accuracy: 0.4979 - val_loss: 39.6434 - val_accuracy: 0.4972\n","Epoch 37/100\n","563/563 [==============================] - 20s 35ms/step - loss: 42.0130 - accuracy: 0.4965 - val_loss: 40.7685 - val_accuracy: 0.4964\n","Epoch 38/100\n","563/563 [==============================] - 21s 37ms/step - loss: 41.9184 - accuracy: 0.5025 - val_loss: 39.5901 - val_accuracy: 0.4968\n","Epoch 39/100\n","563/563 [==============================] - 21s 37ms/step - loss: 41.8996 - accuracy: 0.4990 - val_loss: 39.5620 - val_accuracy: 0.4995\n","Epoch 40/100\n","563/563 [==============================] - 22s 39ms/step - loss: 41.8438 - accuracy: 0.4991 - val_loss: 39.5841 - val_accuracy: 0.4933\n","Epoch 41/100\n","563/563 [==============================] - 20s 36ms/step - loss: 41.7819 - accuracy: 0.4972 - val_loss: 39.5845 - val_accuracy: 0.4964\n","Epoch 42/100\n","563/563 [==============================] - 21s 37ms/step - loss: 41.7381 - accuracy: 0.4965 - val_loss: 39.4785 - val_accuracy: 0.4964\n","Epoch 43/100\n","563/563 [==============================] - 22s 39ms/step - loss: 41.6482 - accuracy: 0.5026 - val_loss: 39.4823 - val_accuracy: 0.4914\n","Epoch 44/100\n","563/563 [==============================] - 21s 37ms/step - loss: 41.6210 - accuracy: 0.4983 - val_loss: 39.4623 - val_accuracy: 0.4924\n","Epoch 45/100\n","563/563 [==============================] - 21s 38ms/step - loss: 41.6139 - accuracy: 0.5007 - val_loss: 40.1379 - val_accuracy: 0.4966\n","Epoch 46/100\n","563/563 [==============================] - 21s 37ms/step - loss: 41.5233 - accuracy: 0.4976 - val_loss: 39.3399 - val_accuracy: 0.4962\n","Epoch 47/100\n","563/563 [==============================] - 22s 39ms/step - loss: 41.5418 - accuracy: 0.4978 - val_loss: 39.3512 - val_accuracy: 0.4954\n","Epoch 48/100\n","563/563 [==============================] - 21s 38ms/step - loss: 41.4707 - accuracy: 0.4974 - val_loss: 39.4735 - val_accuracy: 0.4971\n","Epoch 49/100\n","563/563 [==============================] - 22s 38ms/step - loss: 41.4367 - accuracy: 0.5012 - val_loss: 39.3621 - val_accuracy: 0.4956\n","Epoch 50/100\n","563/563 [==============================] - 21s 38ms/step - loss: 41.3850 - accuracy: 0.5014 - val_loss: 39.4081 - val_accuracy: 0.4962\n","Epoch 51/100\n","563/563 [==============================] - 20s 36ms/step - loss: 41.4200 - accuracy: 0.5010 - val_loss: 39.3325 - val_accuracy: 0.4961\n","Epoch 52/100\n","563/563 [==============================] - 20s 36ms/step - loss: 41.3787 - accuracy: 0.4961 - val_loss: 39.6632 - val_accuracy: 0.4959\n","Epoch 53/100\n","563/563 [==============================] - 20s 36ms/step - loss: 41.3660 - accuracy: 0.4983 - val_loss: 39.2640 - val_accuracy: 0.4922\n","Epoch 54/100\n","563/563 [==============================] - 20s 35ms/step - loss: 41.3172 - accuracy: 0.4961 - val_loss: 39.4903 - val_accuracy: 0.4962\n","Epoch 55/100\n","563/563 [==============================] - 21s 38ms/step - loss: 41.2546 - accuracy: 0.4991 - val_loss: 39.1962 - val_accuracy: 0.4988\n","Epoch 56/100\n","563/563 [==============================] - 19s 34ms/step - loss: 41.2517 - accuracy: 0.5024 - val_loss: 39.2489 - val_accuracy: 0.4938\n","Epoch 57/100\n","563/563 [==============================] - 20s 36ms/step - loss: 41.2239 - accuracy: 0.4994 - val_loss: 39.2984 - val_accuracy: 0.4967\n","Epoch 58/100\n","563/563 [==============================] - 21s 36ms/step - loss: 41.2580 - accuracy: 0.4947 - val_loss: 39.2257 - val_accuracy: 0.4962\n","Epoch 59/100\n","563/563 [==============================] - 20s 35ms/step - loss: 41.2670 - accuracy: 0.4977 - val_loss: 39.1214 - val_accuracy: 0.4958\n","Epoch 60/100\n","563/563 [==============================] - 20s 35ms/step - loss: 41.1344 - accuracy: 0.4968 - val_loss: 39.2386 - val_accuracy: 0.4959\n","Epoch 61/100\n","563/563 [==============================] - 20s 35ms/step - loss: 41.0681 - accuracy: 0.4999 - val_loss: 39.1378 - val_accuracy: 0.4925\n","Epoch 62/100\n","563/563 [==============================] - 21s 36ms/step - loss: 41.0940 - accuracy: 0.5003 - val_loss: 39.1014 - val_accuracy: 0.4956\n","Epoch 63/100\n","563/563 [==============================] - 20s 35ms/step - loss: 41.0805 - accuracy: 0.4996 - val_loss: 39.0833 - val_accuracy: 0.4954\n","Epoch 64/100\n","563/563 [==============================] - 20s 36ms/step - loss: 41.0574 - accuracy: 0.5005 - val_loss: 39.0496 - val_accuracy: 0.4959\n","Epoch 65/100\n","563/563 [==============================] - 23s 40ms/step - loss: 41.0738 - accuracy: 0.4976 - val_loss: 39.0948 - val_accuracy: 0.4932\n","Epoch 66/100\n","563/563 [==============================] - 21s 37ms/step - loss: 40.9617 - accuracy: 0.5009 - val_loss: 39.0218 - val_accuracy: 0.4957\n","Epoch 67/100\n","563/563 [==============================] - 21s 37ms/step - loss: 40.9959 - accuracy: 0.4974 - val_loss: 38.9951 - val_accuracy: 0.4959\n","Epoch 68/100\n","563/563 [==============================] - 20s 36ms/step - loss: 41.0204 - accuracy: 0.4965 - val_loss: 39.0227 - val_accuracy: 0.4958\n","Epoch 69/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.9974 - accuracy: 0.4993 - val_loss: 39.1463 - val_accuracy: 0.4962\n","Epoch 70/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.8905 - accuracy: 0.4988 - val_loss: 38.9936 - val_accuracy: 0.4983\n","Epoch 71/100\n","563/563 [==============================] - 19s 35ms/step - loss: 40.8705 - accuracy: 0.4999 - val_loss: 39.0697 - val_accuracy: 0.4931\n","Epoch 72/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.8407 - accuracy: 0.4993 - val_loss: 38.9792 - val_accuracy: 0.4938\n","Epoch 73/100\n","563/563 [==============================] - 22s 38ms/step - loss: 40.8911 - accuracy: 0.4983 - val_loss: 39.0715 - val_accuracy: 0.4958\n","Epoch 74/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.7695 - accuracy: 0.4988 - val_loss: 38.9510 - val_accuracy: 0.4933\n","Epoch 75/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.8003 - accuracy: 0.4997 - val_loss: 38.9639 - val_accuracy: 0.4952\n","Epoch 76/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.7512 - accuracy: 0.4990 - val_loss: 39.1617 - val_accuracy: 0.4948\n","Epoch 77/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.8345 - accuracy: 0.4975 - val_loss: 38.9122 - val_accuracy: 0.4954\n","Epoch 78/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.7292 - accuracy: 0.5006 - val_loss: 38.8522 - val_accuracy: 0.4959\n","Epoch 79/100\n","563/563 [==============================] - 21s 38ms/step - loss: 40.6845 - accuracy: 0.4992 - val_loss: 38.9882 - val_accuracy: 0.4952\n","Epoch 80/100\n","563/563 [==============================] - 21s 36ms/step - loss: 40.7550 - accuracy: 0.4958 - val_loss: 39.1563 - val_accuracy: 0.4966\n","Epoch 81/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.6779 - accuracy: 0.5005 - val_loss: 38.9308 - val_accuracy: 0.4926\n","Epoch 82/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.7035 - accuracy: 0.4962 - val_loss: 38.8488 - val_accuracy: 0.4948\n","Epoch 83/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.6989 - accuracy: 0.4996 - val_loss: 38.8050 - val_accuracy: 0.4952\n","Epoch 84/100\n","563/563 [==============================] - 21s 36ms/step - loss: 40.5860 - accuracy: 0.5006 - val_loss: 38.8325 - val_accuracy: 0.4959\n","Epoch 85/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.5978 - accuracy: 0.4988 - val_loss: 38.9937 - val_accuracy: 0.4956\n","Epoch 86/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.5539 - accuracy: 0.5025 - val_loss: 38.8920 - val_accuracy: 0.4959\n","Epoch 87/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.6010 - accuracy: 0.4981 - val_loss: 39.2370 - val_accuracy: 0.4957\n","Epoch 88/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.5636 - accuracy: 0.4974 - val_loss: 38.8462 - val_accuracy: 0.4957\n","Epoch 89/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.5249 - accuracy: 0.4971 - val_loss: 38.7667 - val_accuracy: 0.4962\n","Epoch 90/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.5310 - accuracy: 0.4969 - val_loss: 38.9102 - val_accuracy: 0.4927\n","Epoch 91/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.4538 - accuracy: 0.5007 - val_loss: 38.7154 - val_accuracy: 0.4959\n","Epoch 92/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.4708 - accuracy: 0.4991 - val_loss: 38.7340 - val_accuracy: 0.4965\n","Epoch 93/100\n","563/563 [==============================] - 19s 35ms/step - loss: 40.4727 - accuracy: 0.4961 - val_loss: 38.7871 - val_accuracy: 0.4964\n","Epoch 94/100\n","563/563 [==============================] - 19s 35ms/step - loss: 40.4862 - accuracy: 0.5003 - val_loss: 38.6632 - val_accuracy: 0.4958\n","Epoch 95/100\n","563/563 [==============================] - 19s 34ms/step - loss: 40.4658 - accuracy: 0.4964 - val_loss: 38.6628 - val_accuracy: 0.4966\n","Epoch 96/100\n","563/563 [==============================] - 20s 36ms/step - loss: 40.4275 - accuracy: 0.4973 - val_loss: 38.6577 - val_accuracy: 0.4966\n","Epoch 97/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.3624 - accuracy: 0.4991 - val_loss: 38.6500 - val_accuracy: 0.4964\n","Epoch 98/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.3819 - accuracy: 0.4989 - val_loss: 38.6687 - val_accuracy: 0.4956\n","Epoch 99/100\n","563/563 [==============================] - 24s 42ms/step - loss: 40.3658 - accuracy: 0.5030 - val_loss: 38.6511 - val_accuracy: 0.4958\n","Epoch 100/100\n","563/563 [==============================] - 20s 35ms/step - loss: 40.3110 - accuracy: 0.5006 - val_loss: 38.5901 - val_accuracy: 0.4953\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fc6a60cd0d0>"]},"metadata":{},"execution_count":28}],"source":["model.compile(optimizer= tf.keras.optimizers.Adam(learning_rate=1e-5), loss='mean_squared_error', metrics=[\"accuracy\"])\n","model.fit(X_train, y_train, batch_size=128, epochs=100, validation_split=0.2)\n"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-TYn_kpdp8Nl","outputId":"983618a4-aa5f-497f-ad9e-5475dcaa3439","executionInfo":{"status":"ok","timestamp":1643579256567,"user_tz":0,"elapsed":16,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 24ms/step - loss: 0.1548 - accuracy: 0.0000e+00\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.15479008853435516, 0.0]"]},"metadata":{},"execution_count":10}],"source":["model.evaluate(X_test,y_test)"]},{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dhTzzYJX3oRA","outputId":"a826b477-20ae-4108-db78-54031208165c","executionInfo":{"status":"ok","timestamp":1643581888489,"user_tz":0,"elapsed":177,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[array([ 4.08659942, 17.50370619,  4.13985501, 19.21287323,  0.        ,\n","        0.        ]), array([ 0.55587738,  8.33184603,  4.42897465, 25.89672015,  0.        ,\n","        0.        ])]\n"]}],"source":["m_list = []\n","n_list = []\n","for i in range(2):\n","  (m,n) = generate_dataset_two()\n","  m_list.append(m)\n","  n_list.append(n)\n","\n","\n","m = np.array(m_list)\n","m = tf.keras.utils.normalize(m)\n","n = np.array(n_list)\n","\n","print(n_list)"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aVo1WPRf35zp","executionInfo":{"status":"ok","timestamp":1643581895342,"user_tz":0,"elapsed":223,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"55f077db-315b-456c-c87d-82e32421cd89"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 3.4739935 19.858442   3.4601998 19.917772   0.         0.       ]\n"," [ 2.8064106 24.41331    2.8012562 24.411333   0.         0.       ]]\n"]}],"source":["\n","pred_n = model.predict(m)\n","print(pred_n)"]},{"cell_type":"code","execution_count":31,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XeRYfRbZ4A4N","outputId":"82df65a9-213a-471d-c711-d4d2b99eee94","executionInfo":{"status":"ok","timestamp":1643581900397,"user_tz":0,"elapsed":169,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[-1.09926021 -0.03232395  0.73415523  0.9529765          nan         nan]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: RuntimeWarning: invalid value encountered in true_divide\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}],"source":["n_ = np.absolute(pred_n-n)/ n\n","\n","N_ = 1 - n_\n","\n","print(np.average(N_, axis=0))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e0U6sNll8yw5","executionInfo":{"status":"aborted","timestamp":1643577380371,"user_tz":0,"elapsed":14,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["model.save(\"mymodel\")"]}],"metadata":{"accelerator":"TPU","colab":{"collapsed_sections":[],"name":"Copy of 2setsofdata","provenance":[{"file_id":"1g1Lfc54hLeV-o7TRP7poHzXNGNCkWoBO","timestamp":1643582017744},{"file_id":"1d2bsw8hKS6LZCLOTy-u_0eiVvaFSznbd","timestamp":1643569030471}],"authorship_tag":"ABX9TyOOxKwqIZh3U9fsG1kqhHHR"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
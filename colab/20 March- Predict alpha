{"cells":[{"cell_type":"code","execution_count":19,"metadata":{"id":"PZCFJZaZsjW6","executionInfo":{"status":"ok","timestamp":1647875657447,"user_tz":0,"elapsed":7354,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":65},"outputId":"80dce52c-abdc-461b-b7bb-8b5fbaa4ac41"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-88d1e0be-1aaa-400e-ad2b-8b87b7772f36\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-88d1e0be-1aaa-400e-ad2b-8b87b7772f36\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving irf1000.npy to irf1000 (1).npy\n"]}],"source":["from google.colab import files\n","\n","fl = files.upload()\n","\n"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"l3tpMHivs-GZ","executionInfo":{"status":"ok","timestamp":1647875657810,"user_tz":0,"elapsed":8,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["\n","import numpy as np\n","\n","irf = np.load(\"irf1000.npy\")\n","\n","irf = irf\n","\n"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"84-3c5b7mLPS","executionInfo":{"status":"ok","timestamp":1647875765604,"user_tz":0,"elapsed":454,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import scipy.stats as stats\n","import math\n","\n","density = len(irf)\n","\n","def generate_gaussian():\n","    \n","    x = np.array(range(density))\n","    y = irf\n","\n","    return (x,y)\n","\n","\n","\n","def f(x,a,tau):\n","    return a * np.exp(-x/tau)\n","\n","\n","def generate_decay_curve(low_a=0.1,high_a=1,low_tau=1,high_tau=50):\n","    a = np.random.uniform(low=low_a,high=high_a)\n","    tau = np.random.uniform(low=low_tau,high=high_tau)\n","    x = np.array(range(density))\n","    y = f(x,a,tau)\n","\n","    return (y,a,tau)\n","\n","def generate_decay_curve(low_a=0.1,high_a=1,low_tau=1,high_tau=50):\n","    a = np.random.uniform(low=low_a,high=high_a)\n","    tau = np.random.uniform(low=low_tau,high=high_tau)\n","    x = np.array(range(density))\n","    y = f(x,a,tau)\n","\n","    return (y,a,tau)\n","    \n","\n","def generate_dataset_one():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve()\n","    z = np.convolve(y,dec_y)[:density]\n","    # z += np.random.uniform(0,0.2)\n","    z = z + np.random.uniform(low=-z/5,high=z/5,size=density)\n","\n","\n","    t = t/100\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,0,0,0,0))\n","\n","    return (input,output)"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"lPzB6AjSW1u9","executionInfo":{"status":"ok","timestamp":1647875661540,"user_tz":0,"elapsed":3,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["def generate_dataset_two():\n","    (x,y) = generate_gaussian()\n","    \n","\n","    (dec_y,a,t) = generate_decay_curve(low_tau=0.1,high_tau=10)\n","    (dec_y_2,a2,t2) = generate_decay_curve(low_tau=10.1,high_tau=100)\n","\n","    t = t/10\n","    t2 = t2/100\n","\n","    new_dec = dec_y + dec_y_2\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    # z += np.random.uniform(0,0.2)\n","    z = z + np.random.uniform(low=-z/5,high=z/5,size=density)\n","\n","\n","    input = np.concatenate((z,y))\n","    output = np.array((a,t,a2,t2,0,0))\n","    output = np.array([t,t2,0])\n","    # output = output.reshape(3)\n","\n","    return (input,output)"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"Q9y1bMKtXy22","executionInfo":{"status":"ok","timestamp":1647875662847,"user_tz":0,"elapsed":4,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["def generate_dataset_three():\n","    (x,y) = generate_gaussian()\n","    (dec_y,a,t) = generate_decay_curve(low_tau=0.1,high_tau=5)\n","    (dec_y_2,a2,t2) = generate_decay_curve(low_tau=5,high_tau=15)\n","    (dec_y_3,a3,t3) = generate_decay_curve(low_tau=15,high_tau=100)\n","    \n","\n","    t = t/(5-0.1)\n","    t2 = t2/(15-5)\n","    t3 = t3/(100-15)\n","\n","    new_dec = dec_y + dec_y_2 + dec_y_3\n","\n","    z = np.convolve(y,new_dec)[:density]\n","    z = z + np.random.uniform(low=-z/5,high=z/5,size=density)\n","\n","    # z = np.log(z)\n","    # y = np.log(y)\n","\n","    input = np.concatenate((z,y))\n","    output = np.array([a,a2,a3])\n","    # output = np.array([output[0][0],output[1][0],output[2][0],output[0][1],output[1][1],output[2][1]])\n","    # output = output.reshape(6)\n","\n","    return (input,output)"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"EbR3K0p8mUF8","executionInfo":{"status":"ok","timestamp":1647875686569,"user_tz":0,"elapsed":21395,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}}},"outputs":[],"source":["\n","x_list = []\n","y_list = []\n","for i in range(100000):\n","\n","  \n","    # (x,y) = generate_dataset_one()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n","    (x,y) = generate_dataset_three()\n","\n","    \n","    \n","    x_list.append(x)\n","    y_list.append(y)\n","\n","    # (x,y) = generate_dataset_three()\n","    \n","    # x_list.append(x)\n","    # y_list.append(y)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":338,"status":"ok","timestamp":1647793228894,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"PCLMVIBvxt_B","outputId":"5bd607a3-485d-4655-9bd9-634ddf593797"},"outputs":[{"output_type":"stream","name":"stdout","text":["[0.47542608 0.76445316 0.33881953]\n"]}],"source":["print(y_list[2])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VTRWFQ8D4s1O"},"outputs":[],"source":["import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","import sklearn\n","\n","x_list = np.array(x_list)\n","y_list = np.array(y_list)\n","\n","\n","# x_list = np.log(x_list)\n","\n","x_list, y_list = sklearn.utils.shuffle(x_list,y_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hbgNkuaAm4RA"},"outputs":[],"source":["\n","\n","\n","# import matplotlib.pyplot as plt\n","\n","# x = np.array(range(density))\n","# plt.plot(x,x_list[0][:density])\n","# plt.plot(x,x_list[0][density:])\n","\n","\n","# # a = y_list[0][0]\n","# tau = y_list[0][0]\n","# # a2 = y_list[0][2]\n","# tau2 = y_list[0][1]\n","# # a3 = y_list[0][4]\n","# tau3 = y_list[0][2]\n","\n","# print(a,a2,a3)\n","\n","\n","\n","# plt.plot(x,f(x,a,tau))\n","# plt.plot(x,f(x,a2,tau2))\n","# # plt.plot(x,f(x,a3,tau3))\n","# plt.show()\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1801,"status":"ok","timestamp":1647793240448,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"Khp6zsKhol2e","outputId":"bc2c32bc-0618-42c2-afe7-7cfb85ccade3"},"outputs":[{"output_type":"stream","name":"stdout","text":["(100000, 2000)\n","(100000, 3)\n"]}],"source":["\n","x_list = tf.keras.utils.normalize(x_list)\n","# y_list = tf.keras.utils.normalize(y_list)\n","\n","print(x_list.shape)\n","print(y_list.shape)\n","\n","\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(x_list, y_list, test_size=0.10, random_state=40)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CPHyv5EymzWj"},"outputs":[],"source":["import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Dropout\n","from tensorflow.keras import layers\n","\n","\n","model = Sequential()\n","model.add(Dense(400, input_dim=density*2))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(400, activation='relu'))\n","model.add(Dense(100, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(3, activation='relu'))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yY5ay5zMXyP8"},"outputs":[],"source":["def ftf(a,tau):\n","  return a*tf.math.exp(np.array(range(100))/tau)\n","\n","def error_function(y,y_real):\n","\n","  # a,tau = tf.split(y,num_or_size_of_splits=2,axis=1)\n","  # a_real,tau_real = tf.split(y,num_or_size_of_splits=2,axis=1)\n","\n","  return tf.math.reduce_sum(tf.math.abs(y-y_real))\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":865158,"status":"ok","timestamp":1647794714810,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"YPS1N9kGnRFI","outputId":"45cc8e0a-e5e0-4823-8b60-51d8fd86d33a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","563/563 [==============================] - 30s 51ms/step - loss: 0.0364 - accuracy: 0.6301 - val_loss: 0.0244 - val_accuracy: 0.6661\n","Epoch 2/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0359 - accuracy: 0.6321 - val_loss: 0.0240 - val_accuracy: 0.6687\n","Epoch 3/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0353 - accuracy: 0.6356 - val_loss: 0.0236 - val_accuracy: 0.6619\n","Epoch 4/30\n","563/563 [==============================] - 28s 51ms/step - loss: 0.0350 - accuracy: 0.6375 - val_loss: 0.0232 - val_accuracy: 0.6673\n","Epoch 5/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0343 - accuracy: 0.6387 - val_loss: 0.0231 - val_accuracy: 0.6682\n","Epoch 6/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0340 - accuracy: 0.6399 - val_loss: 0.0228 - val_accuracy: 0.6691\n","Epoch 7/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0336 - accuracy: 0.6411 - val_loss: 0.0243 - val_accuracy: 0.6686\n","Epoch 8/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0331 - accuracy: 0.6426 - val_loss: 0.0230 - val_accuracy: 0.6627\n","Epoch 9/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0327 - accuracy: 0.6478 - val_loss: 0.0224 - val_accuracy: 0.6701\n","Epoch 10/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0324 - accuracy: 0.6462 - val_loss: 0.0229 - val_accuracy: 0.6649\n","Epoch 11/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0319 - accuracy: 0.6458 - val_loss: 0.0228 - val_accuracy: 0.6698\n","Epoch 12/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0316 - accuracy: 0.6493 - val_loss: 0.0224 - val_accuracy: 0.6751\n","Epoch 13/30\n","563/563 [==============================] - 31s 55ms/step - loss: 0.0315 - accuracy: 0.6497 - val_loss: 0.0226 - val_accuracy: 0.6754\n","Epoch 14/30\n","563/563 [==============================] - 28s 51ms/step - loss: 0.0312 - accuracy: 0.6494 - val_loss: 0.0224 - val_accuracy: 0.6788\n","Epoch 15/30\n","563/563 [==============================] - 32s 57ms/step - loss: 0.0311 - accuracy: 0.6498 - val_loss: 0.0238 - val_accuracy: 0.6650\n","Epoch 16/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0307 - accuracy: 0.6529 - val_loss: 0.0218 - val_accuracy: 0.6777\n","Epoch 17/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0304 - accuracy: 0.6507 - val_loss: 0.0226 - val_accuracy: 0.6782\n","Epoch 18/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0303 - accuracy: 0.6534 - val_loss: 0.0218 - val_accuracy: 0.6752\n","Epoch 19/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0300 - accuracy: 0.6557 - val_loss: 0.0220 - val_accuracy: 0.6785\n","Epoch 20/30\n","563/563 [==============================] - 28s 51ms/step - loss: 0.0301 - accuracy: 0.6553 - val_loss: 0.0217 - val_accuracy: 0.6759\n","Epoch 21/30\n","563/563 [==============================] - 29s 52ms/step - loss: 0.0297 - accuracy: 0.6558 - val_loss: 0.0215 - val_accuracy: 0.6783\n","Epoch 22/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0296 - accuracy: 0.6552 - val_loss: 0.0219 - val_accuracy: 0.6791\n","Epoch 23/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0294 - accuracy: 0.6577 - val_loss: 0.0223 - val_accuracy: 0.6689\n","Epoch 24/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0292 - accuracy: 0.6584 - val_loss: 0.0218 - val_accuracy: 0.6823\n","Epoch 25/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0291 - accuracy: 0.6585 - val_loss: 0.0229 - val_accuracy: 0.6756\n","Epoch 26/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0290 - accuracy: 0.6600 - val_loss: 0.0215 - val_accuracy: 0.6807\n","Epoch 27/30\n","563/563 [==============================] - 28s 50ms/step - loss: 0.0290 - accuracy: 0.6594 - val_loss: 0.0222 - val_accuracy: 0.6743\n","Epoch 28/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0287 - accuracy: 0.6608 - val_loss: 0.0213 - val_accuracy: 0.6754\n","Epoch 29/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0288 - accuracy: 0.6602 - val_loss: 0.0217 - val_accuracy: 0.6819\n","Epoch 30/30\n","563/563 [==============================] - 29s 51ms/step - loss: 0.0285 - accuracy: 0.6600 - val_loss: 0.0213 - val_accuracy: 0.6812\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7ff4b59d9190>"]},"metadata":{},"execution_count":17}],"source":["model.compile(optimizer= tf.keras.optimizers.Adam(learning_rate=1e-5), loss=\"mean_squared_error\", metrics=[\"accuracy\"])\n","model.fit(X_train, y_train, batch_size=128, epochs=30, validation_split=0.2)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-TYn_kpdp8Nl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647269232585,"user_tz":0,"elapsed":3135,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"10c842be-a570-42e2-ec1c-c2f104fe057c"},"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 3s 9ms/step - loss: 0.0475 - accuracy: 0.8035\n"]},{"output_type":"execute_result","data":{"text/plain":["[0.047512609511613846, 0.8034999966621399]"]},"metadata":{},"execution_count":24}],"source":["model.evaluate(X_test,y_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":396,"status":"ok","timestamp":1647794717566,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"dhTzzYJX3oRA","outputId":"4f4cbc51-bd9f-49d5-a8d6-68ffe9d6fce1"},"outputs":[{"output_type":"stream","name":"stdout","text":["[array([0.14320323, 0.19643366, 0.59672571]), array([0.93477494, 0.65512738, 0.81289622]), array([0.94315773, 0.91793159, 0.96532539]), array([0.34509519, 0.59349284, 0.24879383]), array([0.2388768 , 0.3392553 , 0.83440229])]\n"]}],"source":["m_list = []\n","n_list = []\n","for i in range(5):\n","  (m,n) = generate_dataset_three()\n","  m_list.append(m)\n","  n_list.append(n)\n","\n","\n","m = np.array(m_list)\n","m = tf.keras.utils.normalize(m)\n","# m = np.log(m)\n","n = np.array(n_list)\n","\n","print(n_list)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":455,"status":"ok","timestamp":1647794719717,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"aVo1WPRf35zp","outputId":"873649df-b701-4cc2-806d-569898fd36be"},"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.18605644 0.24953309 0.5158399 ]\n"," [0.7487619  0.7412758  0.767364  ]\n"," [0.6790254  0.77437955 0.9406314 ]\n"," [0.58665663 0.3727398  0.26457757]\n"," [0.28580794 0.5437684  0.6341855 ]]\n"]}],"source":["\n","pred_n = model.predict(m)\n","print(pred_n)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"XeRYfRbZ4A4N"},"outputs":[],"source":["!mkdir -p saved_model"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e0U6sNll8yw5"},"outputs":[],"source":["\n","model.save(\"gdrive/MyDrive/mymodelpredicta.h5\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":321,"status":"ok","timestamp":1647795043036,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"},"user_tz":0},"id":"xghcU9wAE1Lu","outputId":"69d20e5f-450b-4549-e8f3-2f9bfc28ba43"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Physics.pdf',\n"," '0081_Statement_Of_Entry.pdf',\n"," '0620_s10_qp_62.pdf',\n"," 'Contact Information.gform',\n"," 'Untitled spreadsheet.gsheet',\n"," 'Untitled document (9).gdoc',\n"," 'Google_Stock_Price_Train.gsheet',\n"," 'Untitled document (8).gdoc',\n"," 'Untitled document (7).gdoc',\n"," 'KCL Accommodation Offer - Madhanrajan.pdf',\n"," 'KCL Accommodation Offer - Madhanrajan.gdoc',\n"," 'KCL CAS Letter - Madhanrajan VARADHARAJAN.pdf',\n"," '2018_19 Residence Agreement.pdf',\n"," 'Student_Confirmation_of_Study_Letter_1852451.pdf',\n"," 'Startup Video',\n"," 'IMG_0376.JPG',\n"," 'Formula-sheet.pdf',\n"," 'FINAL Investigating the relationship between the period of simple  pendulum.docx',\n"," 'FINAL Investigating the relationship between the period of simple  pendulum.gdoc',\n"," 'Shian Housing Association website TEXT for HOME PAGE.docx',\n"," 'Shian Housing Association website TEXT for HOME PAGE.gdoc',\n"," \"Madhanrajan's Resume (1).pdf\",\n"," 'Gurantor Form.pdf',\n"," \"Madhan's Resume.pdf\",\n"," 'Untitled form.gform',\n"," 'Madhanrajan Varadharajan Reports Summary - 23andMe.pdf',\n"," 'Classroom',\n"," 'Advantage Education Malaysia.gform',\n"," 'snapshot2.jpg',\n"," 'snapshot2.png',\n"," \"Madhanrajan's Resume.pdf\",\n"," 'cold calling.gdoc',\n"," 'Untitled document (6).gdoc',\n"," 'stock.gdoc',\n"," 'stock2info.gdoc',\n"," 'stock2info.pdf',\n"," 'Untitled document (5).gdoc',\n"," 'Untitled document (4).gdoc',\n"," 'Trader Insight Pitch.gdoc',\n"," 'Untitled document (3).gdoc',\n"," 'Untitled document (2).gdoc',\n"," 'Untitled document (1).gdoc',\n"," '4 2 2021 .gdoc',\n"," 'Untitled document.gdoc',\n"," '8 2 2021.gdoc',\n"," 'ps2.docx',\n"," 'ps3.gdoc',\n"," 'Notability (2)',\n"," 'Notability (1)',\n"," 'Notability',\n"," 'Coversheet.docx',\n"," \"Madhanrajan's CV.pdf\",\n"," 'Curation',\n"," 'Colab Notebooks',\n"," 'Idea Factory 2022.docx',\n"," 'mymodel14March.h5',\n"," 'mymodelpredicta.h5']"]},"metadata":{},"execution_count":42}],"source":["import os\n","\n","os.listdir(\"gdrive/MyDrive\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wV8Pvwa9FXGn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1647795011822,"user_tz":0,"elapsed":910,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"90d804cf-0916-421c-c94e-b3cd62aedca4"},"outputs":[{"output_type":"stream","name":"stdout","text":["interpolated_array.npy\tsample_data\n"]}],"source":["!ls"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gCXdo52yoLMp","executionInfo":{"status":"ok","timestamp":1647795035313,"user_tz":0,"elapsed":11511,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"eb38b2d8-3eb2-499e-837e-2f23bc65c4d1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["  import os\n","\n","os.listdir(\"gdrive/MyDrive\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5MAp2hupoqHE","executionInfo":{"status":"ok","timestamp":1647794970040,"user_tz":0,"elapsed":497,"user":{"displayName":"Madhan Rajan","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11949160929832065290"}},"outputId":"6f1bdb3d-bd89-4e99-e6be-8426617a84b0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['mymodelpredicta.h5']"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":[""],"metadata":{"id":"VvddgbClqF4O"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"TPU","colab":{"collapsed_sections":[],"name":"20 March- Predict alpha","provenance":[{"file_id":"1KXKLTmahbzzdtGBwB-T84vrLXo8bi6_x","timestamp":1647792840177},{"file_id":"1XvfWufcgwFbznY5f0mNEKqYfoqBaTELy","timestamp":1647268261741},{"file_id":"1dzyDXFpzavCg-8beUBTlvDa9fQx2L-Aa","timestamp":1646946949513},{"file_id":"1g1Lfc54hLeV-o7TRP7poHzXNGNCkWoBO","timestamp":1643579564167},{"file_id":"1d2bsw8hKS6LZCLOTy-u_0eiVvaFSznbd","timestamp":1643569030471}],"authorship_tag":"ABX9TyNCLi/93dHex5Q9aef2tXYM"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}